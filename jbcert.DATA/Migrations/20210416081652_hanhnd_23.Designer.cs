// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jbcert.DATA.Models;

namespace jbcert.DATA.Migrations
{
    [DbContext(typeof(JBC_CoreContext))]
    [Migration("20210416081652_hanhnd_23")]
    partial class hanhnd_23
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("jbcert.DATA.IdentityModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AnhLoaiBang", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnhLoaiBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AnhPhoi", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnhPhoi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AnhVanBang", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BangId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileId");

                    b.ToTable("AnhVanBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AnhYeuCauPhatBang", b =>
                {
                    b.Property<int>("AnhYeuCauPhatBangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DuongDanAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YeuCauPhatBangId")
                        .HasColumnType("int");

                    b.HasKey("AnhYeuCauPhatBangId");

                    b.ToTable("AnhYeuCauPhatBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex1")
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRole");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId")
                        .HasDatabaseName("IX_AspNetRoleClaims_RoleId1");

                    b.ToTable("AspNetRoleClaim");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex")
                        .HasDatabaseName("EmailIndex1");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex1")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUser");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId")
                        .HasDatabaseName("IX_AspNetUserClaims_UserId1");

                    b.ToTable("AspNetUserClaim");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId")
                        .HasDatabaseName("IX_AspNetUserLogins_UserId1");

                    b.ToTable("AspNetUserLogin");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId")
                        .HasDatabaseName("IX_AspNetUserRoles_RoleId1");

                    b.ToTable("AspNetUserRole");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserToken");
                });

            modelBuilder.Entity("jbcert.DATA.Models.Bang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BangGocId")
                        .HasColumnType("int");

                    b.Property<string>("CmtnguoiLayBang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CMTNguoiLayBang");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("DuongDanFileAnh")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DuongDanFileDeIn")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("HinhThucNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HocSinhId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsChungChi")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiBangId")
                        .HasColumnType("int");

                    b.Property<int?>("NamTotNghiep")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayInBang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayPhatBang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PhoiId")
                        .HasColumnType("int");

                    b.Property<string>("QuanHeVoiNguoiDuocCapBang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiLayBang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SoHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLanCaiChinh")
                        .HasColumnType("int");

                    b.Property<string>("SoVaoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThaiBangId")
                        .HasColumnType("int");

                    b.Property<string>("TruongHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TruongHocId")
                        .HasColumnType("int");

                    b.Property<int?>("YeuCauId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "HocSinhId" }, "IX_Bang_HocSinhId");

                    b.HasIndex(new[] { "PhoiId" }, "IX_Bang_PhoiId");

                    b.HasIndex(new[] { "TrangThaiBangId" }, "IX_Bang_TrangThaiBangId");

                    b.ToTable("Bang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.BangCu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CmtnguoiLayBang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("DuongDanFileAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuongDanFileDeIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HocSinhId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsChungChi")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiBangId")
                        .HasColumnType("int");

                    b.Property<int?>("NamTotNghiep")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayInBang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayPhatBang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PhoiId")
                        .HasColumnType("int");

                    b.Property<string>("QuanHeVoiNguoiDuocCapBang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiLayBang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoVaoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThaiBangId")
                        .HasColumnType("int");

                    b.Property<string>("TruongHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TruongHocId")
                        .HasColumnType("int");

                    b.Property<int?>("YeuCauId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BangCus");
                });

            modelBuilder.Entity("jbcert.DATA.Models.CaiChinh", b =>
                {
                    b.Property<int>("CaiChinhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BangCuId")
                        .HasColumnType("int");

                    b.Property<int>("BangId")
                        .HasColumnType("int");

                    b.Property<int>("DonViThucHien")
                        .HasColumnType("int");

                    b.Property<int>("LanCaiChinh")
                        .HasColumnType("int");

                    b.Property<string>("LyDoCaiChinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NguoiThucHien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiThucHien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianThucHien")
                        .HasColumnType("datetime2");

                    b.HasKey("CaiChinhId");

                    b.ToTable("CaiChinhs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.CapDonVi", b =>
                {
                    b.Property<int>("CapDonViId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("TenCapDonVi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CapDonViId");

                    b.ToTable("CapDonVi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ChucNang", b =>
                {
                    b.Property<int>("ChucNangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("KhoaChaId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<bool?>("ShowOnMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChucNang")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ChucNangId");

                    b.ToTable("ChucNang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.DanToc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DanToc");
                });

            modelBuilder.Entity("jbcert.DATA.Models.DiemMonHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeMonHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HocSinhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DiemMonHocs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.DonVi", b =>
                {
                    b.Property<int>("DonViId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CapDonViId")
                        .HasColumnType("int");

                    b.Property<string>("DiaGioiHanhChinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("KhoaChaId")
                        .HasColumnType("int");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenDonVi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("DonViId");

                    b.HasIndex(new[] { "CapDonViId" }, "IX_DonVi_CapDonViId");

                    b.ToTable("DonVi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.FileDinhKemCaiChinh", b =>
                {
                    b.Property<string>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CaiChinhId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileId");

                    b.ToTable("FileDinhKemCaiChinhs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.FileDinhKemLoaiBang", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoaiBangId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileId");

                    b.ToTable("FileDinhKemLoaiBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.FileDinhKemPhoi", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PhoiId")
                        .HasColumnType("int");

                    b.Property<string>("TenFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileId");

                    b.ToTable("FileDinhKemPhois");
                });

            modelBuilder.Entity("jbcert.DATA.Models.FileDinhKemYeuCau", b =>
                {
                    b.Property<string>("FileId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IconFile")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MimeTypes")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Url")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<int?>("YeuCauId")
                        .HasColumnType("int");

                    b.HasKey("FileId")
                        .HasName("PK_FileDinhKemYeuCau_1");

                    b.HasIndex(new[] { "YeuCauId" }, "IX_FileDinhKemYeuCau_YeuCauId");

                    b.ToTable("FileDinhKemYeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.FileHocSinhYeuCau", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MimeTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YeuCauId")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.ToTable("FileHocSinhYeuCaus");
                });

            modelBuilder.Entity("jbcert.DATA.Models.GioiTinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ten")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("GioiTinh");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HinhThucCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HinhThucCap");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HocSinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("CongNhanTotNghiep")
                        .HasColumnType("bit");

                    b.Property<bool?>("DaInBangGoc")
                        .HasColumnType("bit");

                    b.Property<string>("DanToc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DanTocId")
                        .HasColumnType("int");

                    b.Property<string>("DiemThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("GioiTinhId")
                        .HasColumnType("int");

                    b.Property<string>("HK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucDaoTao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoKhauThuongTru")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HoVaTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoiDongThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("KQ")
                        .HasColumnType("bit");

                    b.Property<string>("LopHoc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LopHocId")
                        .HasColumnType("int");

                    b.Property<int?>("NamTotNghiep")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiSinh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("SoLanXet")
                        .HasColumnType("int");

                    b.Property<string>("SoVaoSo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TT")
                        .HasColumnType("int");

                    b.Property<string>("TruongHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TruongHocId")
                        .HasColumnType("int");

                    b.Property<int?>("UT")
                        .HasColumnType("int");

                    b.Property<string>("XepLoaiTotNghiep")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("XetHK")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DanTocId" }, "IX_HocSinh_DanTocId");

                    b.HasIndex(new[] { "GioiTinhId" }, "IX_HocSinh_GioiTinhId");

                    b.HasIndex(new[] { "TruongHocId" }, "IX_HocSinh_TruongHocId");

                    b.ToTable("HocSinh");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HocSinhFileDinhKem", b =>
                {
                    b.Property<string>("FileId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("HocSinhId")
                        .HasColumnType("int");

                    b.Property<string>("IconFile")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("FileId")
                        .HasName("PK_FileDinhKem");

                    b.HasIndex(new[] { "HocSinhId" }, "IX_HocSinhFileDinhKem_HocSinhId");

                    b.ToTable("HocSinhFileDinhKem");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HocSinhTrongNhomTaoVanBang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BangCuId")
                        .HasColumnType("int");

                    b.Property<int?>("BangId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("HocSinhId")
                        .HasColumnType("int");

                    b.Property<int>("NhomTaoVanBangId")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiBangId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HocSinhTrongNhomTaoVanBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.Huyen", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Huyen");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetCapDonViChucNang", b =>
                {
                    b.Property<int>("LienKetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CapDonViId")
                        .HasColumnType("int");

                    b.Property<int?>("ChucNangId")
                        .HasColumnType("int");

                    b.HasKey("LienKetId");

                    b.HasIndex(new[] { "CapDonViId" }, "IX_LienKetCapDonViChucNang_CapDonViId");

                    b.HasIndex(new[] { "ChucNangId" }, "IX_LienKetCapDonViChucNang_ChucNangId");

                    b.ToTable("LienKetCapDonViChucNang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetHocSinhYeuCau", b =>
                {
                    b.Property<int>("LienKetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("HocSinhId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TrangThaiCapPhatBang")
                        .HasColumnType("int");

                    b.Property<bool?>("TrangThaiKiemTraTaoHoSo")
                        .HasColumnType("bit");

                    b.Property<int?>("YeuCauId")
                        .HasColumnType("int");

                    b.HasKey("LienKetId");

                    b.HasIndex(new[] { "HocSinhId" }, "IX_LienKetHocSinhYeuCau_HocSinhId");

                    b.HasIndex(new[] { "YeuCauId" }, "IX_LienKetHocSinhYeuCau_YeuCauId");

                    b.ToTable("LienKetHocSinhYeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetLoaiYeuCauCapDonVi", b =>
                {
                    b.Property<int>("LienKetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CapDonViId")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiYeuCauId")
                        .HasColumnType("int");

                    b.HasKey("LienKetId");

                    b.HasIndex(new[] { "CapDonViId" }, "IX_LienKetLoaiYeuCauCapDonVi_CapDonViId");

                    b.HasIndex(new[] { "LoaiYeuCauId" }, "IX_LienKetLoaiYeuCauCapDonVi_LoaiYeuCauId");

                    b.ToTable("LienKetLoaiYeuCauCapDonVi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetNhomNguoiDungChucNang", b =>
                {
                    b.Property<int>("LienKetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ChucNangid")
                        .HasColumnType("int");

                    b.Property<int>("NhomNguoiDungId")
                        .HasColumnType("int");

                    b.HasKey("LienKetId");

                    b.HasIndex(new[] { "ChucNangid" }, "IX_LienKetNhomNguoiDungChucNang_ChucNangid");

                    b.HasIndex(new[] { "NhomNguoiDungId" }, "IX_LienKetNhomNguoiDungChucNang_NhomNguoiDungId");

                    b.ToTable("LienKetNhomNguoiDungChucNang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LoaiBang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ChiSo")
                        .HasColumnType("int");

                    b.Property<string>("CodeCapDonVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("HinhThucCapId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsChungChi")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiBangGocId")
                        .HasColumnType("int");

                    b.Property<string>("MaLoaiBang")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaNoiIn")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .HasColumnType("ntext");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "HinhThucCapId" }, "IX_LoaiBang_HinhThucCapId");

                    b.ToTable("LoaiBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LoaiNhomTaoVanBang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiNhomTaoVanBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LoaiYeuCau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TenLoaiYeuCau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiYeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogCaiChinh", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BangId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HanhDong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<string>("TruongDuLieuCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogId");

                    b.ToTable("LogCaiChinhs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogCapPhoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DonViCapId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViNhanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhoiId")
                        .HasColumnType("int");

                    b.Property<string>("SoHieu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogCapPhois");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogHocSinh", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HanhDong")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("HocSinhId")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("LogId");

                    b.HasIndex(new[] { "HocSinhId" }, "IX_LogHocSinh_HocSinhId");

                    b.ToTable("LogHocSinh");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogNguoiDung", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HanhDong")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IP");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("LogId");

                    b.HasIndex(new[] { "NguoiDungId" }, "IX_LogNguoiDung_NguoiDungId");

                    b.ToTable("LogNguoiDung");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogPhoi", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HanhDong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PhoiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("LogId");

                    b.ToTable("LogPhois");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogVanBang", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HanhDong")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.Property<int?>("VanBangId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.HasIndex(new[] { "VanBangId" }, "IX_LogVanBang_VanBangId");

                    b.ToTable("LogVanBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogYeuCau", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HanhDong")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.Property<int?>("YeuCauId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.HasIndex(new[] { "YeuCauId" }, "IX_LogYeuCau_YeuCauId");

                    b.ToTable("LogYeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LopHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<Guid>("GiaoVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NienKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLop")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LopHocs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.MauCongVan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("LoaiYeuCauId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongVan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MauCongVans");
                });

            modelBuilder.Entity("jbcert.DATA.Models.MonHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeCapDonVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeMonHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMonHoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("DanTocId")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("GioiTinhId")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LaGiaoVien")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NhomNguoiDungId")
                        .HasColumnType("int");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("SoCanCuoc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NguoiDungId");

                    b.HasIndex(new[] { "DonViId" }, "IX_NguoiDung_DonViId");

                    b.HasIndex(new[] { "NhomNguoiDungId" }, "IX_NguoiDung_NhomNguoiDungId");

                    b.HasIndex(new[] { "PhongBanId" }, "IX_NguoiDung_PhongBanId");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NhapPhoi", b =>
                {
                    b.Property<int>("NhapPhoiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DiaDiemNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiBangId")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoDienThoaiNguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("NhapPhoiId");

                    b.ToTable("NhapPhois");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NhapPhoi_Phoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("NhapPhoiId")
                        .HasColumnType("int");

                    b.Property<int?>("PhoiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NhapPhoi_Phois");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NhomNguoiDung", b =>
                {
                    b.Property<int>("NhomNguoiDungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("TenNhomNguoiDung")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("NhomNguoiDungId");

                    b.HasIndex(new[] { "PhongBanId" }, "IX_NhomNguoiDung_PhongBanId");

                    b.ToTable("NhomNguoiDung");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NhomTaoVanBang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("AddedByImport")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChoPhepTaoLai")
                        .HasColumnType("bit");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViIn")
                        .HasColumnType("int");

                    b.Property<string>("DuongDanFileAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuongDanFileAnhDeIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiBangId")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiNhomTaoVanBangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TongSohocSinh")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiBangId")
                        .HasColumnType("int");

                    b.Property<int?>("TruongHocId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NhomTaoVanBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.PhoiVanBang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ChiSoCoDinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiSoThayDoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaCap")
                        .HasColumnType("bit");

                    b.Property<string>("DonViDaNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiBangId")
                        .HasColumnType("int");

                    b.Property<string>("MoTaTrangThai")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NhapPhoiId")
                        .HasColumnType("int");

                    b.Property<string>("SoHieu")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("TrangThaiPhoiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TrangThaiPhoiId" }, "IX_Phoi_TrangThaiPhoiId");

                    b.ToTable("Phoi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.PhongBan", b =>
                {
                    b.Property<int>("PhongBanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhongBan")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("PhongBanId");

                    b.HasIndex(new[] { "DonViId" }, "IX_PhongBan_DonViId");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("jbcert.DATA.Models.QuyTacFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Format")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuyTacFormat");
                });

            modelBuilder.Entity("jbcert.DATA.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThongBaoTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("jbcert.DATA.Models.RoomUserConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomUserConnections");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongBao", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaDoc")
                        .HasColumnType("bit");

                    b.Property<int?>("DonViGuiId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViNhanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiGuiId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiNhanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhongBanGuiId")
                        .HasColumnType("int");

                    b.Property<int?>("PhongBanNhanId")
                        .HasColumnType("int");

                    b.Property<int?>("ThongBaoTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongBaoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThongBaoTypes");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongBaoTypeCapDonVi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeCapDonVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThongBaoTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ThongBaoTypeCapDonVis");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongTinCaiChinh", b =>
                {
                    b.Property<int>("ThongTinCaiChinhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CaiChinhId")
                        .HasColumnType("int");

                    b.Property<string>("ThongTinCu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongTinMoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongTinThayDoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ThongTinCaiChinhId");

                    b.ToTable("ThongTinCaiChinhs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongTinVanBang", b =>
                {
                    b.Property<string>("TruongDuLieuCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("BangId")
                        .HasColumnType("int");

                    b.Property<int?>("CaiChinhOrder")
                        .HasColumnType("int");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTri")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TruongDuLieuCode", "BangId");

                    b.HasIndex(new[] { "BangId" }, "IX_ThongTinVanBang_BangId");

                    b.ToTable("ThongTinVanBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongTinVanBangCu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BangId")
                        .HasColumnType("int");

                    b.Property<int?>("CaiChinhOrder")
                        .HasColumnType("int");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TruongDuLieuCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BangId");

                    b.ToTable("ThongTinVanBangCus");
                });

            modelBuilder.Entity("jbcert.DATA.Models.Tinh", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tinh");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TrangThaiBang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MaMauTrangThai")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TrangThaiPhoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Border")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaMau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiPhoi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TrangThaiYeuCau", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Border")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaMau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MauChu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenTrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Code")
                        .HasName("PK_TrangThaiYeuCau_1");

                    b.ToTable("TrangThaiYeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TrangThaiYeuCauPhatBang", b =>
                {
                    b.Property<int>("TrangThaiYeuCauPhatBangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TenTrangThaiYeuCauPhatBang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrangThaiYeuCauPhatBangId");

                    b.ToTable("TrangThaiYeuCauPhatBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TruongDuLieu", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsChungChi")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KieuDuLieu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .HasColumnType("ntext");

                    b.HasKey("Code");

                    b.ToTable("TruongDuLieu");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TruongDuLieuLoaiBang", b =>
                {
                    b.Property<int>("LoaiBangId")
                        .HasColumnType("int");

                    b.Property<string>("TruongDuLieuCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("Bold")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool?>("DungChung")
                        .HasColumnType("bit");

                    b.Property<string>("Font")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("Italic")
                        .HasColumnType("bit");

                    b.Property<int>("KieuDuLieu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("TenTruongDuLieu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Underline")
                        .HasColumnType("bit");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int?>("X")
                        .HasColumnType("int");

                    b.Property<int?>("Y")
                        .HasColumnType("int");

                    b.HasKey("LoaiBangId", "TruongDuLieuCode");

                    b.HasIndex(new[] { "TruongDuLieuCode" }, "IX_TruongDuLieuLoaiBang_TruongDuLieuCode");

                    b.ToTable("TruongDuLieuLoaiBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.UserConnection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectionId");

                    b.ToTable("UserConnections");
                });

            modelBuilder.Entity("jbcert.DATA.Models.Xa", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Xa");
                });

            modelBuilder.Entity("jbcert.DATA.Models.XepLoaiTotNghiep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeCapDonVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XepLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("XepLoaiTotNghieps");
                });

            modelBuilder.Entity("jbcert.DATA.Models.YeuCau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DonViChuyenTiepId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViDichId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<int?>("DonViYeuCauId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiVanBangId")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiYeuCauId")
                        .HasColumnType("int");

                    b.Property<string>("MaTrangThaiYeuCau")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaYeuCau")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayGuiYeuCau")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("NguoiCapNhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NguoiTaoYeuCau")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenYeuCau")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LoaiYeuCauId" }, "IX_YeuCau_LoaiYeuCauId");

                    b.HasIndex(new[] { "MaTrangThaiYeuCau" }, "IX_YeuCau_MaTrangThaiYeuCau");

                    b.ToTable("YeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.YeuCauPhatBang", b =>
                {
                    b.Property<int>("YeuCauPhatBangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BangId")
                        .HasColumnType("int");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTaoYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThaiYeuCauPhatBangId")
                        .HasColumnType("int");

                    b.HasKey("YeuCauPhatBangId");

                    b.ToTable("YeuCauPhatBangs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("jbcert.DATA.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("jbcert.DATA.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jbcert.DATA.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("jbcert.DATA.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("jbcert.DATA.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("jbcert.DATA.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("jbcert.DATA.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserRole", b =>
                {
                    b.HasOne("jbcert.DATA.Models.AspNetRole", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jbcert.DATA.Models.AspNetUser", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUserToken", b =>
                {
                    b.HasOne("jbcert.DATA.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("jbcert.DATA.Models.Bang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.PhoiVanBang", "Phoi")
                        .WithMany("Bangs")
                        .HasForeignKey("PhoiId")
                        .HasConstraintName("FK_Bang_Phoi");

                    b.HasOne("jbcert.DATA.Models.TrangThaiBang", "TrangThaiBang")
                        .WithMany("Bangs")
                        .HasForeignKey("TrangThaiBangId")
                        .HasConstraintName("FK_Bang_TrangThaiBang");

                    b.Navigation("Phoi");

                    b.Navigation("TrangThaiBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.DonVi", b =>
                {
                    b.HasOne("jbcert.DATA.Models.CapDonVi", "CapDonVi")
                        .WithMany("DonVis")
                        .HasForeignKey("CapDonViId")
                        .HasConstraintName("FK_DonVi_CapDonVi");

                    b.Navigation("CapDonVi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.FileDinhKemYeuCau", b =>
                {
                    b.HasOne("jbcert.DATA.Models.YeuCau", "YeuCau")
                        .WithMany("FileDinhKemYeuCaus")
                        .HasForeignKey("YeuCauId")
                        .HasConstraintName("FK_FileDinhKemYeuCau_YeuCau");

                    b.Navigation("YeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HocSinh", b =>
                {
                    b.HasOne("jbcert.DATA.Models.DanToc", "DanTocNavigation")
                        .WithMany("HocSinhs")
                        .HasForeignKey("DanTocId")
                        .HasConstraintName("FK_HocSinh_DanToc");

                    b.HasOne("jbcert.DATA.Models.GioiTinh", "GioiTinhNavigation")
                        .WithMany("HocSinhs")
                        .HasForeignKey("GioiTinhId")
                        .HasConstraintName("FK_HocSinh_GioiTinh");

                    b.HasOne("jbcert.DATA.Models.DonVi", "TruongHocNavigation")
                        .WithMany("HocSinhs")
                        .HasForeignKey("TruongHocId")
                        .HasConstraintName("FK_HocSinh_DonVi");

                    b.Navigation("DanTocNavigation");

                    b.Navigation("GioiTinhNavigation");

                    b.Navigation("TruongHocNavigation");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HocSinhFileDinhKem", b =>
                {
                    b.HasOne("jbcert.DATA.Models.HocSinh", "HocSinh")
                        .WithMany("HocSinhFileDinhKems")
                        .HasForeignKey("HocSinhId")
                        .HasConstraintName("FK_HocSinhFileDinhKem_HocSinh");

                    b.Navigation("HocSinh");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetCapDonViChucNang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.CapDonVi", "CapDonVi")
                        .WithMany("LienKetCapDonViChucNangs")
                        .HasForeignKey("CapDonViId")
                        .HasConstraintName("FK_LienKetCapDonViChucNang_CapDonVi");

                    b.HasOne("jbcert.DATA.Models.ChucNang", "ChucNang")
                        .WithMany("LienKetCapDonViChucNangs")
                        .HasForeignKey("ChucNangId")
                        .HasConstraintName("FK_LienKetCapDonViChucNang_ChucNang");

                    b.Navigation("CapDonVi");

                    b.Navigation("ChucNang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetHocSinhYeuCau", b =>
                {
                    b.HasOne("jbcert.DATA.Models.HocSinh", "HocSinh")
                        .WithMany("LienKetHocSinhYeuCaus")
                        .HasForeignKey("HocSinhId")
                        .HasConstraintName("FK_LienKetHocSinhYeuCau_HocSinh");

                    b.HasOne("jbcert.DATA.Models.YeuCau", "YeuCau")
                        .WithMany("LienKetHocSinhYeuCaus")
                        .HasForeignKey("YeuCauId")
                        .HasConstraintName("FK_LienKetHocSinhYeuCau_YeuCau");

                    b.Navigation("HocSinh");

                    b.Navigation("YeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetLoaiYeuCauCapDonVi", b =>
                {
                    b.HasOne("jbcert.DATA.Models.CapDonVi", "CapDonVi")
                        .WithMany("LienKetLoaiYeuCauCapDonVis")
                        .HasForeignKey("CapDonViId")
                        .HasConstraintName("FK_LienKetLoaiYeuCauCapDonVi_CapDonVi");

                    b.HasOne("jbcert.DATA.Models.LoaiYeuCau", "LoaiYeuCau")
                        .WithMany("LienKetLoaiYeuCauCapDonVis")
                        .HasForeignKey("LoaiYeuCauId")
                        .HasConstraintName("FK_LienKetLoaiYeuCauCapDonVi_LoaiYeuCau");

                    b.Navigation("CapDonVi");

                    b.Navigation("LoaiYeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LienKetNhomNguoiDungChucNang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.ChucNang", "ChucNang")
                        .WithMany("LienKetNhomNguoiDungChucNangs")
                        .HasForeignKey("ChucNangid")
                        .HasConstraintName("FK_LienKetNhomNguoiDungChucNang_ChucNang");

                    b.HasOne("jbcert.DATA.Models.NhomNguoiDung", "NhomNguoiDung")
                        .WithMany("LienKetNhomNguoiDungChucNangs")
                        .HasForeignKey("NhomNguoiDungId")
                        .HasConstraintName("FK_LienKetNhomNguoiDungChucNang_NhomNguoiDung")
                        .IsRequired();

                    b.Navigation("ChucNang");

                    b.Navigation("NhomNguoiDung");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LoaiBang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.HinhThucCap", "HinhThucCap")
                        .WithMany("LoaiBangs")
                        .HasForeignKey("HinhThucCapId")
                        .HasConstraintName("FK_LoaiBang_HinhThucCap");

                    b.Navigation("HinhThucCap");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogHocSinh", b =>
                {
                    b.HasOne("jbcert.DATA.Models.HocSinh", "HocSinh")
                        .WithMany("LogHocSinhs")
                        .HasForeignKey("HocSinhId")
                        .HasConstraintName("FK_LogHocSinh_HocSinh");

                    b.Navigation("HocSinh");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogNguoiDung", b =>
                {
                    b.HasOne("jbcert.DATA.Models.NguoiDung", "NguoiDung")
                        .WithMany("LogNguoiDungs")
                        .HasForeignKey("NguoiDungId")
                        .HasConstraintName("FK_LogNguoiDung_NguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogVanBang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.Bang", "VanBang")
                        .WithMany("LogVanBangs")
                        .HasForeignKey("VanBangId")
                        .HasConstraintName("FK_LogVanBang_Bang");

                    b.Navigation("VanBang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LogYeuCau", b =>
                {
                    b.HasOne("jbcert.DATA.Models.YeuCau", "YeuCau")
                        .WithMany("LogYeuCaus")
                        .HasForeignKey("YeuCauId")
                        .HasConstraintName("FK_LogYeuCau_YeuCau");

                    b.Navigation("YeuCau");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NguoiDung", b =>
                {
                    b.HasOne("jbcert.DATA.Models.DonVi", "DonVi")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("DonViId")
                        .HasConstraintName("FK_NguoiDung_DonVi");

                    b.HasOne("jbcert.DATA.Models.NhomNguoiDung", "NhomNguoiDung")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("NhomNguoiDungId")
                        .HasConstraintName("FK_NguoiDung_NhomNguoiDung");

                    b.HasOne("jbcert.DATA.Models.PhongBan", "PhongBan")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("PhongBanId")
                        .HasConstraintName("FK_NguoiDung_PhongBan");

                    b.Navigation("DonVi");

                    b.Navigation("NhomNguoiDung");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NhomNguoiDung", b =>
                {
                    b.HasOne("jbcert.DATA.Models.PhongBan", "PhongBan")
                        .WithMany("NhomNguoiDungs")
                        .HasForeignKey("PhongBanId")
                        .HasConstraintName("FK_NhomNguoiDung_PhongBan");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("jbcert.DATA.Models.PhoiVanBang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.TrangThaiPhoi", "TrangThaiPhoi")
                        .WithMany("Phois")
                        .HasForeignKey("TrangThaiPhoiId")
                        .HasConstraintName("FK_Phoi_TrangThaiPhoi");

                    b.Navigation("TrangThaiPhoi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.PhongBan", b =>
                {
                    b.HasOne("jbcert.DATA.Models.DonVi", "DonVi")
                        .WithMany("PhongBans")
                        .HasForeignKey("DonViId")
                        .HasConstraintName("FK_PhongBan_DonVi");

                    b.Navigation("DonVi");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongTinVanBang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.Bang", "Bang")
                        .WithMany("ThongTinVanBangs")
                        .HasForeignKey("BangId")
                        .HasConstraintName("FK_ThongTinVanBang_Bang")
                        .IsRequired();

                    b.HasOne("jbcert.DATA.Models.TruongDuLieu", "TruongDuLieuCodeNavigation")
                        .WithMany("ThongTinVanBangs")
                        .HasForeignKey("TruongDuLieuCode")
                        .HasConstraintName("FK_ThongTinVanBang_TruongDuLieu")
                        .IsRequired();

                    b.Navigation("Bang");

                    b.Navigation("TruongDuLieuCodeNavigation");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ThongTinVanBangCu", b =>
                {
                    b.HasOne("jbcert.DATA.Models.BangCu", "Bang")
                        .WithMany()
                        .HasForeignKey("BangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bang");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TruongDuLieuLoaiBang", b =>
                {
                    b.HasOne("jbcert.DATA.Models.LoaiBang", "LoaiBang")
                        .WithMany("TruongDuLieuLoaiBangs")
                        .HasForeignKey("LoaiBangId")
                        .HasConstraintName("FK_TruongDuLieuLoaiBang_LoaiBang")
                        .IsRequired();

                    b.HasOne("jbcert.DATA.Models.TruongDuLieu", "TruongDuLieuCodeNavigation")
                        .WithMany("TruongDuLieuLoaiBangs")
                        .HasForeignKey("TruongDuLieuCode")
                        .HasConstraintName("FK_TruongDuLieuLoaiBang_TruongDuLieu")
                        .IsRequired();

                    b.Navigation("LoaiBang");

                    b.Navigation("TruongDuLieuCodeNavigation");
                });

            modelBuilder.Entity("jbcert.DATA.Models.YeuCau", b =>
                {
                    b.HasOne("jbcert.DATA.Models.LoaiYeuCau", "LoaiYeuCau")
                        .WithMany("YeuCaus")
                        .HasForeignKey("LoaiYeuCauId")
                        .HasConstraintName("FK_YeuCau_LoaiYeuCau");

                    b.HasOne("jbcert.DATA.Models.TrangThaiYeuCau", "MaTrangThaiYeuCauNavigation")
                        .WithMany("YeuCaus")
                        .HasForeignKey("MaTrangThaiYeuCau")
                        .HasConstraintName("FK_YeuCau_TrangThaiYeuCau");

                    b.Navigation("LoaiYeuCau");

                    b.Navigation("MaTrangThaiYeuCauNavigation");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");

                    b.Navigation("AspNetUserRoles");
                });

            modelBuilder.Entity("jbcert.DATA.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserRoles");

                    b.Navigation("AspNetUserTokens");
                });

            modelBuilder.Entity("jbcert.DATA.Models.Bang", b =>
                {
                    b.Navigation("LogVanBangs");

                    b.Navigation("ThongTinVanBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.CapDonVi", b =>
                {
                    b.Navigation("DonVis");

                    b.Navigation("LienKetCapDonViChucNangs");

                    b.Navigation("LienKetLoaiYeuCauCapDonVis");
                });

            modelBuilder.Entity("jbcert.DATA.Models.ChucNang", b =>
                {
                    b.Navigation("LienKetCapDonViChucNangs");

                    b.Navigation("LienKetNhomNguoiDungChucNangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.DanToc", b =>
                {
                    b.Navigation("HocSinhs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.DonVi", b =>
                {
                    b.Navigation("HocSinhs");

                    b.Navigation("NguoiDungs");

                    b.Navigation("PhongBans");
                });

            modelBuilder.Entity("jbcert.DATA.Models.GioiTinh", b =>
                {
                    b.Navigation("HocSinhs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HinhThucCap", b =>
                {
                    b.Navigation("LoaiBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.HocSinh", b =>
                {
                    b.Navigation("HocSinhFileDinhKems");

                    b.Navigation("LienKetHocSinhYeuCaus");

                    b.Navigation("LogHocSinhs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LoaiBang", b =>
                {
                    b.Navigation("TruongDuLieuLoaiBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.LoaiYeuCau", b =>
                {
                    b.Navigation("LienKetLoaiYeuCauCapDonVis");

                    b.Navigation("YeuCaus");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NguoiDung", b =>
                {
                    b.Navigation("LogNguoiDungs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.NhomNguoiDung", b =>
                {
                    b.Navigation("LienKetNhomNguoiDungChucNangs");

                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.PhoiVanBang", b =>
                {
                    b.Navigation("Bangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.PhongBan", b =>
                {
                    b.Navigation("NguoiDungs");

                    b.Navigation("NhomNguoiDungs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TrangThaiBang", b =>
                {
                    b.Navigation("Bangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TrangThaiPhoi", b =>
                {
                    b.Navigation("Phois");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TrangThaiYeuCau", b =>
                {
                    b.Navigation("YeuCaus");
                });

            modelBuilder.Entity("jbcert.DATA.Models.TruongDuLieu", b =>
                {
                    b.Navigation("ThongTinVanBangs");

                    b.Navigation("TruongDuLieuLoaiBangs");
                });

            modelBuilder.Entity("jbcert.DATA.Models.YeuCau", b =>
                {
                    b.Navigation("FileDinhKemYeuCaus");

                    b.Navigation("LienKetHocSinhYeuCaus");

                    b.Navigation("LogYeuCaus");
                });
#pragma warning restore 612, 618
        }
    }
}
